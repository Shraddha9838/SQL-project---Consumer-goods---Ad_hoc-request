# Task 1

SELECT market  
FROM dim_customer 
WHERE customer="Atliq Exclusive"  
AND region = "APAC" 
GROUP BY market ; 


#Task 2
    WITH unique_products AS 
    ( SELECT 
       fiscal_year, count(DISTINCT product_code) AS unique_products
       FROM fact_sales_monthly
       GROUP BY fiscal_year
       )
	SELECT 
		uq_pr_2020.unique_products as unique_products_2020,
		uq_pr_2021.unique_products as unique_products_2021,
		round((uq_pr_2021.unique_products - uq_pr_2020.unique_products)/uq_pr_2020.unique_products * 100,2)
		AS percentage_change
	FROM 
        unique_products uq_pr_2020
    CROSS JOIN 
       unique_products uq_pr_2021
    WHERE 
       uq_pr_2020.fiscal_year = 2020 
    AND 
       uq_pr_2021.fiscal_year = 2021;
    


#Task 3
  SELECT segment , count(DISTINCT product) AS product_count
    FROM dim_product 
    GROUP BY segment 
    ORDER BY product_count DESC;


#Task 4
WITH temp_table AS
(SELECT
 p.segment ,
s.fiscal_year, count(DISTINCT p.product_code) AS product_count
FROM fact_sales_monthly s 
JOIN dim_product p  
ON p.product_code=s.product_code
GROUP BY p.segment,s.fiscal_year
)
SELECT 
 uq_pd_2020.segment,
 uq_pd_2020.product_count AS product_count_2020,
 uq_pd_2021.product_count AS product_count_2021,
 uq_pd_2021.product_count - uq_pd_2020.product_count AS difference
FROM 
 temp_table AS uq_pd_2020
JOIN 
 temp_table AS uq_pd_2021
ON
 uq_pd_2020.segment=uq_pd_2021.segment
AND uq_pd_2020.fiscal_year = 2020
AND uq_pd_2021.fiscal_year = 2021 
ORDER BY difference DESC;



#Task 5

(SELECT	
  dim_product.product_code , product, manufacturing_cost 
  FROM dim_product JOIN fact_manufacturing_cost
  ON dim_product.product_code = fact_manufacturing_cost.product_code 
  ORDER BY manufacturing_cost DESC LIMIT 1 )
 UNION
 (SELECT
   dim_product.product_code , product, manufacturing_cost 
   FROM dim_product 
   JOIN fact_manufacturing_cost
   ON dim_product.product_code = fact_manufacturing_cost.product_code 
   ORDER BY manufacturing_cost ASC LIMIT 1 );
 
 
  #Task 6

With temp_table AS
(
SELECT c.customer_code,c.customer,i.pre_invoice_discount_pct
   FROM dim_customer c 
   JOIN fact_pre_invoice_deductions i
   ON c.customer_code = i.customer_code
   WHERE fiscal_year=2021 
   AND market = "India"
 )
 SELECT customer_code , customer , 
   ROUND(AVG(pre_invoice_discount_pct),5) AS Avg_pre_invoice_discount_pct
   FROM temp_table 
   GROUP BY customer_code
   ORDER BY pre_invoice_discount_pct DESC
   LIMIT 5;
 
 
 
#Task 7

  WITH temp_table AS
  (
  SELECT month(date) as month_number,monthname(date)as month_name ,year(date) 
    AS Year_ ,  (g.gross_price *s.sold_quantity) AS Gross_sales
    FROM fact_sales_monthly s 
    JOIN fact_gross_price g
    ON s.product_code=g.product_code
    JOIN dim_customer c
    ON s.customer_code=c.customer_code
    WHERE customer ="Atliq Exclusive")
    
SELECT month_name,Year_,round((sum(Gross_sales)/1000000),2) AS Gross_sales_amount_in_millions
	FROM temp_table
    GROUP BY month_name,Year_
    ORDER BY Year_;
    
    
   #Task 8

WITH temp_table AS
(
 SELECT date, month(date_add(date,interval 4 month)) AS period, 
 sold_quantity 
 FROM fact_sales_monthly where fiscal_year="2020"
 )
SELECT CASE
   when (period/3) <= 1 then "Q1"
   when (period/3) <= 2 and period/3 > 1 then "Q2"
   when (period/3) <=3 and period/3 > 2 then "Q3"
   when (period/3) <=4 and period/3 > 3 then "Q4" end as quarter,
round((SUM(sold_quantity)/1000000),2) as total_sold_quantity_in_millions  FROM temp_table 
 GROUP BY quarter 
 ORDER BY total_sold_quantity_in_millions DESC;
    
  #Task 9

WITH temp_table AS 
(
   SELECT c.channel, sum(m.sold_quantity*p.gross_price) as total_sales 
     FROM fact_sales_monthly m 
     JOIN fact_gross_price p
     ON m.product_code = p.product_code
     JOIN dim_customer c 
     ON m.customer_code = c.customer_code
     WHERE m.fiscal_year = 2021
     GROUP BY c.channel 
     ORDER BY total_sales DESC
)
SELECT channel , 
    ROUND(total_sales/1000000,2) as gross_sales_in_million,
    ROUND(total_sales/ (sum(total_sales) OVER()) *100,2)
AS Percentage 
FROM temp_table ;  
    
 
    #Task 10
   
With temp_table AS 
( 
  SELECT 
   division , s.product_code ,concat( p.product ,"(",p.variant,")") AS product, 
   SUM(s.sold_quantity) AS total_sold_quantity , rank() OVER (PARTITION BY division 
   ORDER BY SUM(sold_quantity)DESC)
   AS rank_order
   FROM 
   fact_sales_monthly s 
   JOIN dim_product p
   ON s.product_code = p.product_code
   WHERE fiscal_year=2021 
   GROUP BY product_code
 )
SELECT * 
  FROM temp_table
  WHERE rank_order 
  IN(1,2,3);


 

With temp_table AS 
( 
  SELECT 
   division , s.product_code , p.product  AS product, 
   SUM(s.sold_quantity) AS total_sold_quantity , rank() OVER (PARTITION BY division 
   ORDER BY SUM(sold_quantity)DESC)
   AS rank_order
   FROM 
   fact_sales_monthly s 
   JOIN dim_product p
   ON s.product_code = p.product_code
   WHERE fiscal_year=2021 
   GROUP BY product_code
 )
SELECT * 
  FROM temp_table
  WHERE rank_order 
  IN(1,2,3);
